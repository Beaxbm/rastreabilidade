version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gauge-postgres
    environment:
      POSTGRES_USER: gauge_user
      POSTGRES_PASSWORD: gauge_password
      POSTGRES_DB: gauge_trace_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gauge_user -d gauge_trace_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gauge-network

  # Node.js API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: gauge-api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://gauge_user:gauge_password@postgres:5432/gauge_trace_db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      PYTHON_SERVICE_URL: http://python-service:8000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gauge-network
    restart: unless-stopped

  # Python OCR Service
  python-service:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: gauge-python
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gauge-network
    restart: unless-stopped

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: gauge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - gauge-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  gauge-network:
    driver: bridge